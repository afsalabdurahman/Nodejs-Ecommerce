<link rel="stylesheet" href="/assets/UserProfile/checkout.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<style>
    .popup {
        display: none;
        /* Hidden by default */
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    /* Popup content */
    .popup-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 600px;
        border-radius: 8px;
    }

    /* Close button */
    .close-button {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close-button:hover,
    .close-button:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }

    /* Form styling */
    form {
        display: flex;
        flex-direction: column;
    }

    label {
        margin-top: 10px;
    }

    input {
        margin-bottom: 10px;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    button {
        padding: 10px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    button:hover {
        background-color: #45a049;
    }
</style>


<div class="body">
    <div class="container">
        <div class="checkout-header">
            <h1>CHECKOUT</h1>
        </div>
        <div class="checkout-content">
            <div class="address-section">
                <h2>Select Address</h2>

                <div class="address">
                    <input type="radio" id="address1" onclick="check(this.id)" name="address" value="address2" checked>

                    <label for="address2">
                        <strong>{{userData.name}}</strong><br>
                        {{userData.address}},{{userData.loction}}<br>
                        Phone: +91 {{userData.mobile}}<br>
                        Email: {{userData.email}}
                    </label>
                </div>

                <div class="address">
                    {{#if userData.address2.name}}
                    <input type="radio" id="address2" onclick="check(this.id)" name="address" value="address2">

                    <label for="address2">
                        <strong>{{userData.address2.name}}</strong><br>
                        {{userData.address2.address}},{{userData.address2.state}},{{userData.address2.city}},{{userData.address2.zip}}<br>
                        Phone: +91 {{userData.address2.phone}}<br>
                        Email: {{userData.address2.email}}

                    </label>
                    {{else}}
                    {{/if}}


                    <div class="body">
                        <!-- Edit Button -->
                        {{#if userData.address2.name}}
                        <button id="editButton">Edit</button>
                        <button type="button" style="background-color: red;" onclick="DeleteAdd()">Delete</button>
                        {{else}}
                        <button id="editButton">Add</button>
                        {{/if}}

                        <div id="popup" class="popup">
                            <div class="popup-content">
                                <span class="close-button" id="closeButton">&times;</span>
                                {{#if userData.address2.name}}
                                <h2>Edit Information</h2>
                                {{else}}
                                <h2>Add Information</h2>
                                {{/if}}
                                {{#if userData.address2.name}}
                                <form id="editForm" method="post" action="/profile/newadd"
                                    enctype="application/x-www-form-urlencoded">
                                    <input type="text" style="display: none;" id="id" name="id" value="007">

                                    <input type="text" style="display: none;" id="price" name="price"
                                        value=" {{totalPrice}}">
                                    <label for="name">Name:</label>

                                    <input type="text" id="name" name="name" value="{{userData.address2.name}}"
                                        required>
                                    <p style="color: red;" id="change">
                                    </p>

                                    <label for="address">Address:</label>
                                    <input type="text" id="address" name="address"
                                        value=" {{userData.address2.address}},{{userData.address2.zip}}" required>
                                    <label for="state">State:</label>
                                    <input type="text" id="state" name="state" value="{{userData.address2.state}}">
                                    <label for="city">City:</label>
                                    <input type="text" name="city" id="city" value="{{userData.address2.city}}">
                                    <label for="state">Zip:</label>
                                    <input type="text" id="zip" name="zip" value="{{userData.address2.zip}}">

                                    <label for="phone">Phone Number:</label>
                                    <input type="number" id="phone" name="mobile" value="{{userData.address2.phone}}"
                                        required>
                                    <label for="email">Email:</label>
                                    <input type="email" id="email" name="email" value="{{userData.address2.email}}"
                                        required>
                                    <button type="submit">Save</button>

                                </form>
                                {{!--Add New Address --}}
                                {{else}}
                                <form id="editForm" method="post" action="/profile/newadd"
                                    enctype="application/x-www-form-urlencoded">
                                    <input type="text" style="display: none;" id="id" name="id" value="007">

                                    <input type="text" style="display: none;" id="price" name="price"
                                        value=" {{totalPrice}}">
                                    <label for="name">Name:</label>

                                    <input type="text" id="name" name="name" required>
                                    <p id="change" style="color: red;"></p>
                                    <label for="address">Address:</label>
                                    <input type="text" id="address" name="address" required>
                                    <label for="state">State:</label>
                                    <input type="text" id="state" name="state" required>
                                    <label for="city">City:</label>
                                    <input type="text" id="city" name="city" required>
                                    <label for="state">Zip:</label>
                                    <input type="text" id="zip" name="zip" required>

                                    <label for=" phone">Phone Number:</label>
                                    <input type="number" id="phone" name="mobile" required>
                                    <label for="email">Email:</label>
                                    <input type="email" id="email" name="email" required>
                                    <button type="submit">Save</button>

                                </form>
                                {{/if}}
                            </div>
                        </div>


                    </div>
                </div>

                <div class="discount">
                    <label for="discount-code">Discount Coupon</label>
                    <input type="text" id="discount-code" name="discount-code">
                    <button type="button" onclick="apply()">Apply</button>
                </div>

                {{#isEmpty Scra}}
                {{!-- scrach coupens..............--}}
                {{else}}

                <body>
                    <a onclick="call()">
                        <p id="hide" style="display: none;">Remove Coupen</p>
                    </a>
                    <p id="seeCoupons" style="cursor: pointer; color: blue; text-decoration: underline;">See your
                        coupons</p>

                    <!-- Popup Box -->
                    <div id="couponPopup" class="popup">
                        <div class="popup-content">
                            <span class="close">&times;</span>
                            <h2>Scratch to Reveal Your Coupon Code</h2>
                            <div class="scratch-card" id="scratchCard">
                                <div class="coupon-code" id="couponCode">{{Scra.code}}</div>
                                <p id="Cdiscount">{{Scra.Coupendiscount}}</p>
                                <canvas></canvas>
                            </div>
                            <p>Terms and Conditions: This coupon is valid until the end of the month. It can be used for
                                one-time purchases only and cannot be combined with other offers.</p>
                        </div>
                    </div>
                    {{!-- scrach coupen Ends.........--}}
                    {{/isEmpty}}

                    <div class="total-price">
                        <p>Total Price: â‚¹{{totalPriced}}</p>
                        <p>Tax: â‚¹100.00</p>
                        <p id="discount">Discount: </p>

                        <p><strong id="gtotal">Grand Total: â‚¹{{totalPriceTax}}</strong></p>

                    </div>
            </div>
            <div class="payment-section" style="">
                <h2>Payment Method</h2>
                <div class="payment-method">
                    <input type="radio" id="cod" name="payment" value="cod">
                    <label for="cod">Cash on Delivery</label>
                </div>
                <div class="payment-method">
                    <input type="radio" id="upi" name="payment" value="upi">
                    <label for="upi">UPI</label>
                </div>
                <div class="payment-method">
                    <input type="radio" id="Lux-Wallet" name="payment" value="Lux-Wallet">
                    <label for="Lux-Wallet">Lux-Wallet</label>
                </div>
                <div class="payment-method">
                    <input type="radio" id="razorpay" name="payment" value="razorpay">
                    <label for="razorpay">Razorpay</label>
                </div>
                <div class="terms">
                    <input type="checkbox" id="terms" name="terms">
                    <label for="terms">I accept the Terms and Conditions</label>
                </div>
                <p id="result"></p>
                <button type="button" id="paymentButton" onclick="placeOrder()" class="place-order">Place an
                    Order</button>
            </div>
        </div>
    </div>
</div>
{{!-- popup--}}
<div id="loadingPopup" class="loading-popup">
    <div class="loading-content">
        <p>Loading...</p>
    </div>
</div>
{{!-- complted payment --}}
<div id="completionPopup" class="completion-popup" style="background-color: greenyellow;">
    <div class="completion-content">
        <p>Sucess! Order is placed</p>
        <p style="font-size: medium;" onclick="showOrder()"> Show orders</p>
        </a>
        <a href="/"> <button id="closeButton" class="close-button">Close</button> </a>
    </div>
</div>
<script>
    //apply discount
    function apply() {
        let appvalues = document.getElementById("discount-code").value
        if (appvalues.trim() == "") {
            alert("emty")
        }
        let cod = document.getElementById("couponCode").innerHTML
        if (appvalues == cod) {
            let amt = parseInt(document.getElementById("Cdiscount").innerHTML)
            console.log(amt, "amt")
            let a = document.getElementById("gtotal").innerHTML
            b = a.slice(14)
            let c = Number(b)
            total = c - amt



            fetch(`/update/coupen?code=${cod}`).then((re) => {
                if (re.status == 200) {
                    document.getElementById("hide").style.display = ""
                    Swal.fire("Coupen apply!")
                    document.getElementById("gtotal").innerHTML = `Grand Total: â‚¹${total}`

                    document.getElementById("discount").innerHTML = `Discount : -${amt}`
                } else {
                    document.getElementById("hide").style.display = ""
                    Swal.fire("Allready used")

                }

            })
        } else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "",

            });
        }
    }



    function DeleteAdd() {
        Swal.fire({
            title: "Do you want to Delete?",
            showDenyButton: true,

            confirmButtonText: "Delete",

        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {

                let price = document.getElementById('price').value

                window.location.href = `/profile/newadd?id=007&price=${price}`
            } else if (result.isDenied) {
                Swal.fire("Cancelled", "", "info");
            }
        });


    }


    function placeOrder(e) {
        event.preventDefault();
        let radios = document.getElementsByName('payment')
        let selectedValue = null;
        for (const radio of radios) {
            if (radio.checked) {
                selectedValue = radio.value;
                break;
            }
        }

        document.getElementById('result').innerText = selectedValue ? `Selected value is: ${selectedValue} ` : 'No option selected';
        if (selectedValue == "cod") {
            a = document.getElementById("gtotal").innerHTML
            b = a.slice(14)
            let c = Number(b)
            if (c > 1000) {
                Swal.fire("Cod not Avilable more than â‚¹1000")
            } else {
                payment()
            }

        } else if (selectedValue == "razorpay") {
            initiateRazorpayPayment()

        } else if (selectedValue == "Lux-Wallet") {
            Lux()
        }


    }


    let Data = "";
    function payment() {


        document.getElementById('paymentButton').addEventListener('click', function () {
            if ('No option selected' == document.getElementById('result').innerText) {
                document.getElementById('result').style.color = "red"
            } else {


                const loadingPopup = document.getElementById('loadingPopup');
                const completionPopup = document.getElementById('completionPopup');

                // Show loading popup
                loadingPopup.classList.add('active');

                setTimeout(function () {
                    // Hide loading popup
                    loadingPopup.classList.remove('active');

                    // Show completion popup
                    completionPopup.classList.add('active');

                    setTimeout(function () {
                        // Hide completion popup
                        completionPopup.classList.remove('active');
                    }, 20000); // 20 seconds
                }, 2000); // Simulate loading for 2 seconds}
            }
        });

    }
    document.getElementById('closeButton').addEventListener('click', function () {
        const completionPopup = document.getElementById('completionPopup');
        completionPopup.classList.remove('active');
    });

    function check(data1) {
        Data = data1;
        console.log(data1, "vallllll from radioo")
    }
    function showOrder() {
        a = document.getElementById("gtotal").innerHTML
        b = a.slice(14)
        let c = Number(b)
        console.log(Data, "from show order")
        window.location.href = `/profile/allorders?info=COD&amt=${c}&add=${Data}`;
    }


    ///popup......................................
    document.addEventListener('DOMContentLoaded', () => {
        const editButton = document.getElementById('editButton');
        const popup = document.getElementById('popup');
        const closeButton = document.getElementById('closeButton');

        // Show popup
        editButton.addEventListener('click', () => {
            popup.style.display = 'block';
        });

        // Hide popup
        closeButton.addEventListener('click', () => {
            popup.style.display = 'none';
        });

        // Hide popup when clicking outside of it
        window.addEventListener('click', (event) => {
            if (event.target === popup) {
                popup.style.display = 'none';
            }
        });

        // Form submission handling (optional)
        document.getElementById('editForm').addEventListener('submit', (event) => {
            event.preventDefault();

            let name = document.getElementById("name")
            let email = document.getElementById("email").value // Assuming you have an input with id="email"
            let mobile = document.getElementById("phone").value
            let address = document.getElementById("address").value
            let zip = document.getElementById("zip").value
            let city = document.getElementById("city").value
            let state = document.getElementById("state").value
            console.log(name, city, mobile, state)
            const regex = /[0-9]|[!@#$%^&*]/;

            if (name.value.trim() === "") { // Corrected logical condition
                document.getElementById("change").innerHTML = "Enter your name";
                return

            }

            else {
                document.getElementById("change").innerHTML = "";
            }


            if (regex.test(name.value.trim())) {
                console.log("regsz")
                document.getElementById("change").innerHTML = "Special charector and Number are not allowed";

                return;
            }
            else {
                document.getElementById("change").innerHTML = "";
            }


            event.target.submit()


            popup.style.display = 'none';
            //  });





        });

    });

    //Razorpay.................
    function initiateRazorpayPayment() {
        a = document.getElementById("gtotal").innerHTML
        b = a.slice(14)
        let c = Number(b)
        console.log(c)
        // Fetch the order ID from the server
        fetch('/createOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                amount: c, // Amount in INR
                currency: 'INR',
                receipt: 'order_rcptid_11'
            })
        })
            .then(response => response.json())
            .then(data => {
                var options = {
                    "key": "rzp_test_rKKnsBDAE47Z6D", // Enter the Key ID generated from the Dashboard
                    "amount": data.amount, // Amount is in currency subunits
                    "currency": data.currency,
                    "name": "Your Company Name",
                    "description": "Test Transaction",
                    "order_id": data.id, // This is the order ID returned by the server
                    "handler": function (response) {
                        // Handle payment success here
                        console.log(response);
                        // You can make an API call to your server to verify the payment
                        fetch('/verifyPayment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(response)
                        })
                            .then(res => res.json())
                            .then(data => {
                                console.log(data, "datad")
                                if (data.status === "success") {
                                    Swal.fire({
                                        icon: "success",
                                        title: "Order placed",
                                        showConfirmButton: false,
                                        timer: 1500
                                    });

                                    //  window.location.href = '/profile/allorders?info=wallet';
                                } else {
                                    Swal.fire({
                                        icon: "success",
                                        title: "Order placed",
                                        showConfirmButton: false,
                                        timer: 1500
                                    });

                                    setTimeout(() => {
                                        window.location.href = `/profile/allorders?info=RazorPay&amt=${c}&add=${Data}`;
                                    }, 1000)

                                }
                            });
                    },
                    "prefill": {
                        "name": "John Doe",
                        "email": "john@example.com",
                        "contact": "9999999999"
                    },
                    "theme": {
                        "color": "#F37254"
                    }
                };
                var rzp1 = new Razorpay(options);
                rzp1.open();
            })
            .catch(error => console.error('Error:', error));
        return "wallet"
    }
    //end Razor

    //scratch....................


    // Get the p tag and the popup
    var pTag = document.getElementById("seeCoupons");
    var popup = document.getElementById("couponPopup");

    // Get the <span> element that closes the popup
    var closeBtn = document.getElementsByClassName("close")[0];

    // When the user clicks on the p tag, open the popup
    pTag.onclick = function () {
        popup.style.display = "block";
        initScratchCard();
    }

    // When the user clicks on <span> (x), close the popup
    closeBtn.onclick = function () {
        popup.style.display = "none";
    }

    // When the user clicks anywhere outside of the popup, close it
    window.onclick = function (event) {
        if (event.target == popup) {
            popup.style.display = "none";
        }
    }

    // Scratch card functionality
    function initScratchCard() {
        var scratchCard = document.getElementById('scratchCard');
        var canvas = scratchCard.querySelector('canvas');
        var ctx = canvas.getContext('2d');
        var couponCode = document.getElementById('couponCode');

        // Initialize canvas size
        canvas.width = scratchCard.offsetWidth;
        canvas.height = scratchCard.offsetHeight;

        // Fill the canvas with a solid color (this simulates the scratch layer)
        ctx.fillStyle = '#aaa';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        // Scratch functionality
        canvas.addEventListener('mousedown', function (e) {
            canvas.addEventListener('mousemove', scratch);
        });

        canvas.addEventListener('mouseup', function () {
            canvas.removeEventListener('mousemove', scratch);
        });

        function scratch(e) {
            var rect = canvas.getBoundingClientRect();
            var x = e.clientX - rect.left;
            var y = e.clientY - rect.top;

            // Erase part of the layer
            ctx.globalCompositeOperation = 'destination-out';
            ctx.beginPath();
            ctx.arc(x, y, 15, 0, Math.PI * 2, false);
            ctx.fill();
        }
    }

    function Lux() {
        a = document.getElementById("gtotal").innerHTML
        b = a.slice(14)
        let c = Number(b)
        console.log(c)
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success",
                cancelButton: "btn btn-danger"
            },
            buttonsStyling: false
        });
        swalWithBootstrapButtons.fire({
            title: "â‚¹" + c,
            text: `Pay from user Lux - wallet`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, Pay it!",
            cancelButtonText: "No, cancel!",
            reverseButtons: true
        },

        ).then((result) => {
            if (result.isConfirmed) {
                //ftech data
                walletdata().then((res) => {
                    if (res == "not") {
                        console.log(res, "res")
                        swalWithBootstrapButtons.fire({
                            title: "Faild!",
                            text: "Check your avilable balance",
                            icon: "Failed"
                        });

                    } else {
                        swalWithBootstrapButtons.fire({
                            title: "Sucess!",
                            text: "Check your avilable balance",
                            icon: "Success"
                        });

                        window.location.href = `/profile/allorders?info=Wallet&amt=${c}&add=${Data}`
                    }
                })


                //

            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire({
                    title: "Cancelled",
                    text: "Your imaginary file is safe :)",
                    icon: "error"
                });
            }
        });
    }

    async function walletdata() {
        // Extract the amount from the DOM and convert it to a number
        const a = document.getElementById("gtotal").innerHTML;
        const b = a.slice(14);
        const c = Number(b);

        try {
            // Perform the fetch request with the amount as a query parameter
            const response = await fetch(`/checkbalance?amount=${c}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            // Parse the JSON from the response
            const data = await response.json();

            if (data && data.success) {
                console.log(data, "data");
                return "done"; // Return "done" if the request was successful
            } else {
                return "not"; // Return "not" if the request was not successful
                
            }
        } catch (error) {
            console.error('Fetch error:', error);
            return "not"; // Return "not" in case of an error
        }
    }

</script>